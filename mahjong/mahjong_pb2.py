# coding=utf-8
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mahjong.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

DESCRIPTOR = _descriptor.FileDescriptor(
    name='mahjong.proto',
    package='majong_rpc',
    syntax='proto3',
    serialized_pb=_b(
        '\n\rmahjong.proto\x12\nmajong_rpc\"R\n\x08GangData\x12\"\n\x04type\x18\x01 \x01(\x0e\x32\x14.majong_rpc.GangType\x12\x0f\n\x07\x66ighter\x18\x02 \x01(\x05\x12\x11\n\tgangvalue\x18\x03 \x01(\x05\"v\n\x10MajongPlayerData\x12\x11\n\tplayer_id\x18\x01 \x01(\x05\x12\x10\n\x08handlist\x18\x02 \x03(\x05\x12\x0b\n\x03\x63hi\x18\x03 \x03(\x05\x12\x0c\n\x04peng\x18\x04 \x03(\x05\x12\"\n\x04gang\x18\x05 \x03(\x0b\x32\x14.majong_rpc.GangData\"N\n\rCalculateData\x12\x0f\n\x07\x61llocid\x18\x01 \x01(\x05\x12,\n\x06player\x18\x02 \x01(\x0b\x32\x1c.majong_rpc.MajongPlayerData\"e\n\x0f\x43\x61lculateResult\x12\x0b\n\x03\x63hi\x18\x01 \x03(\x05\x12\x0c\n\x04peng\x18\x02 \x03(\x05\x12\x0c\n\x04gang\x18\x03 \x03(\x05\x12\n\n\x02hu\x18\x04 \x03(\x05\x12\x0c\n\x04zimo\x18\x05 \x03(\x05\x12\x0f\n\x07\x61\x64junct\x18\x06 \x01(\x0c\"x\n\x10SettlePlayerData\x12,\n\x06player\x18\x01 \x01(\x0b\x32\x1c.majong_rpc.MajongPlayerData\x12&\n\x06settle\x18\x02 \x01(\x0e\x32\x16.majong_rpc.SettleType\x12\x0e\n\x06majong\x18\x03 \x01(\x05\"a\n\nSettleData\x12\x10\n\x08\x61lloc_id\x18\x01 \x01(\x05\x12\x31\n\x0bplayer_list\x18\x02 \x03(\x0b\x32\x1c.majong_rpc.SettlePlayerData\x12\x0e\n\x06\x62\x61nker\x18\x03 \x01(\x05\"F\n\x0cSettleResult\x12\x36\n\x10userSettleResule\x18\x01 \x03(\x0b\x32\x1c.majong_rpc.UserSettleResult\"e\n\x10UserSettleResult\x12\x0e\n\x06userId\x18\x01 \x01(\x05\x12\r\n\x05score\x18\x02 \x01(\x05\x12\x32\n\x0esettlePatterns\x18\x03 \x03(\x0e\x32\x1a.majong_rpc.SettlePatterns\":\n\tCheatData\x12\x11\n\tplayer_id\x18\x01 \x01(\x05\x12\x0b\n\x03loc\x18\x02 \x01(\x05\x12\r\n\x05level\x18\x03 \x01(\x05\"F\n\x0bShuffleData\x12\x10\n\x08\x61lloc_id\x18\x01 \x01(\x05\x12%\n\x06\x63heats\x18\x02 \x03(\x0b\x32\x15.majong_rpc.CheatData\"!\n\rShuffleResult\x12\x10\n\x08\x63\x61rdlist\x18\x01 \x03(\x05*+\n\x08GangType\x12\t\n\x05\x42GANG\x10\x00\x12\t\n\x05MGANG\x10\x01\x12\t\n\x05\x41GANG\x10\x02*\xa7\x01\n\nSettleType\x12\x0b\n\x07PING_JU\x10\x00\x12\x0c\n\x08\x46\x41NG_PAO\x10\x01\x12\n\n\x06HU_PAO\x10\x02\x12\t\n\x05ZI_MO\x10\x03\x12\n\n\x06\x42ZI_MO\x10\x04\x12\x0c\n\x08GANG_PAO\x10\x05\x12\x0f\n\x0bHU_GANG_PAO\x10\x06\x12\x0c\n\x08GANG_HUA\x10\x07\x12\r\n\tBGANG_HUA\x10\x08\x12\x0e\n\nQIANG_GANG\x10\t\x12\x0f\n\x0b\x42QIANG_GANG\x10\n*^\n\x0eSettlePatterns\x12\n\n\x06HONGHU\x10\x00\x12\t\n\x05HEIHU\x10\x01\x12\n\n\x06TIANHU\x10\x02\x12\x08\n\x04\x44IHU\x10\x03\x12\t\n\x05LANHU\x10\x04\x12\x08\n\x04ZIMO\x10\x05\x12\n\n\x06PIAOHU\x10\x06\x32\xd7\x01\n\x0fMajongCalculate\x12\x45\n\tcalculate\x12\x19.majong_rpc.CalculateData\x1a\x1b.majong_rpc.CalculateResult\"\x00\x12<\n\x06settle\x12\x16.majong_rpc.SettleData\x1a\x18.majong_rpc.SettleResult\"\x00\x12?\n\x07shuffle\x12\x17.majong_rpc.ShuffleData\x1a\x19.majong_rpc.ShuffleResult\"\x00\x42\x16\n\x12mahjong.mode.protoP\x01\x62\x06proto3')
)

_GANGTYPE = _descriptor.EnumDescriptor(
    name='GangType',
    full_name='majong_rpc.GangType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='BGANG', index=0, number=0,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='MGANG', index=1, number=1,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='AGANG', index=2, number=2,
            options=None,
            type=None),
    ],
    containing_type=None,
    options=None,
    serialized_start=979,
    serialized_end=1022,
)
_sym_db.RegisterEnumDescriptor(_GANGTYPE)

GangType = enum_type_wrapper.EnumTypeWrapper(_GANGTYPE)
_SETTLETYPE = _descriptor.EnumDescriptor(
    name='SettleType',
    full_name='majong_rpc.SettleType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='PING_JU', index=0, number=0,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='FANG_PAO', index=1, number=1,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='HU_PAO', index=2, number=2,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ZI_MO', index=3, number=3,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BZI_MO', index=4, number=4,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='GANG_PAO', index=5, number=5,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='HU_GANG_PAO', index=6, number=6,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='GANG_HUA', index=7, number=7,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BGANG_HUA', index=8, number=8,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='QIANG_GANG', index=9, number=9,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BQIANG_GANG', index=10, number=10,
            options=None,
            type=None),
    ],
    containing_type=None,
    options=None,
    serialized_start=1025,
    serialized_end=1192,
)
_sym_db.RegisterEnumDescriptor(_SETTLETYPE)

SettleType = enum_type_wrapper.EnumTypeWrapper(_SETTLETYPE)
_SETTLEPATTERNS = _descriptor.EnumDescriptor(
    name='SettlePatterns',
    full_name='majong_rpc.SettlePatterns',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='HONGHU', index=0, number=0,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='HEIHU', index=1, number=1,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TIANHU', index=2, number=2,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='DIHU', index=3, number=3,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='LANHU', index=4, number=4,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ZIMO', index=5, number=5,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PIAOHU', index=6, number=6,
            options=None,
            type=None),
    ],
    containing_type=None,
    options=None,
    serialized_start=1194,
    serialized_end=1288,
)
_sym_db.RegisterEnumDescriptor(_SETTLEPATTERNS)

SettlePatterns = enum_type_wrapper.EnumTypeWrapper(_SETTLEPATTERNS)
BGANG = 0
MGANG = 1
AGANG = 2
PING_JU = 0
FANG_PAO = 1
HU_PAO = 2
ZI_MO = 3
BZI_MO = 4
GANG_PAO = 5
HU_GANG_PAO = 6
GANG_HUA = 7
BGANG_HUA = 8
QIANG_GANG = 9
BQIANG_GANG = 10
HONGHU = 0
HEIHU = 1
TIANHU = 2
DIHU = 3
LANHU = 4
ZIMO = 5
PIAOHU = 6

_GANGDATA = _descriptor.Descriptor(
    name='GangData',
    full_name='majong_rpc.GangData',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='type', full_name='majong_rpc.GangData.type', index=0,
            number=1, type=14, cpp_type=8, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='fighter', full_name='majong_rpc.GangData.fighter', index=1,
            number=2, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='gangvalue', full_name='majong_rpc.GangData.gangvalue', index=2,
            number=3, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=29,
    serialized_end=111,
)

_MAJONGPLAYERDATA = _descriptor.Descriptor(
    name='MajongPlayerData',
    full_name='majong_rpc.MajongPlayerData',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='player_id', full_name='majong_rpc.MajongPlayerData.player_id', index=0,
            number=1, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='handlist', full_name='majong_rpc.MajongPlayerData.handlist', index=1,
            number=2, type=5, cpp_type=1, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='chi', full_name='majong_rpc.MajongPlayerData.chi', index=2,
            number=3, type=5, cpp_type=1, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='peng', full_name='majong_rpc.MajongPlayerData.peng', index=3,
            number=4, type=5, cpp_type=1, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='gang', full_name='majong_rpc.MajongPlayerData.gang', index=4,
            number=5, type=11, cpp_type=10, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=113,
    serialized_end=231,
)

_CALCULATEDATA = _descriptor.Descriptor(
    name='CalculateData',
    full_name='majong_rpc.CalculateData',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='allocid', full_name='majong_rpc.CalculateData.allocid', index=0,
            number=1, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='player', full_name='majong_rpc.CalculateData.player', index=1,
            number=2, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=233,
    serialized_end=311,
)

_CALCULATERESULT = _descriptor.Descriptor(
    name='CalculateResult',
    full_name='majong_rpc.CalculateResult',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='chi', full_name='majong_rpc.CalculateResult.chi', index=0,
            number=1, type=5, cpp_type=1, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='peng', full_name='majong_rpc.CalculateResult.peng', index=1,
            number=2, type=5, cpp_type=1, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='gang', full_name='majong_rpc.CalculateResult.gang', index=2,
            number=3, type=5, cpp_type=1, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='hu', full_name='majong_rpc.CalculateResult.hu', index=3,
            number=4, type=5, cpp_type=1, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='zimo', full_name='majong_rpc.CalculateResult.zimo', index=4,
            number=5, type=5, cpp_type=1, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='adjunct', full_name='majong_rpc.CalculateResult.adjunct', index=5,
            number=6, type=12, cpp_type=9, label=1,
            has_default_value=False, default_value=_b(""),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=313,
    serialized_end=414,
)

_SETTLEPLAYERDATA = _descriptor.Descriptor(
    name='SettlePlayerData',
    full_name='majong_rpc.SettlePlayerData',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='player', full_name='majong_rpc.SettlePlayerData.player', index=0,
            number=1, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='settle', full_name='majong_rpc.SettlePlayerData.settle', index=1,
            number=2, type=14, cpp_type=8, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='majong', full_name='majong_rpc.SettlePlayerData.majong', index=2,
            number=3, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=416,
    serialized_end=536,
)

_SETTLEDATA = _descriptor.Descriptor(
    name='SettleData',
    full_name='majong_rpc.SettleData',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='alloc_id', full_name='majong_rpc.SettleData.alloc_id', index=0,
            number=1, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='player_list', full_name='majong_rpc.SettleData.player_list', index=1,
            number=2, type=11, cpp_type=10, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='banker', full_name='majong_rpc.SettleData.banker', index=2,
            number=3, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=538,
    serialized_end=635,
)

_SETTLERESULT = _descriptor.Descriptor(
    name='SettleResult',
    full_name='majong_rpc.SettleResult',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='userSettleResule', full_name='majong_rpc.SettleResult.userSettleResule', index=0,
            number=1, type=11, cpp_type=10, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=637,
    serialized_end=707,
)

_USERSETTLERESULT = _descriptor.Descriptor(
    name='UserSettleResult',
    full_name='majong_rpc.UserSettleResult',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='userId', full_name='majong_rpc.UserSettleResult.userId', index=0,
            number=1, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='score', full_name='majong_rpc.UserSettleResult.score', index=1,
            number=2, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='settlePatterns', full_name='majong_rpc.UserSettleResult.settlePatterns', index=2,
            number=3, type=14, cpp_type=8, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=709,
    serialized_end=810,
)

_CHEATDATA = _descriptor.Descriptor(
    name='CheatData',
    full_name='majong_rpc.CheatData',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='player_id', full_name='majong_rpc.CheatData.player_id', index=0,
            number=1, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='loc', full_name='majong_rpc.CheatData.loc', index=1,
            number=2, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='level', full_name='majong_rpc.CheatData.level', index=2,
            number=3, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=812,
    serialized_end=870,
)

_SHUFFLEDATA = _descriptor.Descriptor(
    name='ShuffleData',
    full_name='majong_rpc.ShuffleData',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='alloc_id', full_name='majong_rpc.ShuffleData.alloc_id', index=0,
            number=1, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='cheats', full_name='majong_rpc.ShuffleData.cheats', index=1,
            number=2, type=11, cpp_type=10, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=872,
    serialized_end=942,
)

_SHUFFLERESULT = _descriptor.Descriptor(
    name='ShuffleResult',
    full_name='majong_rpc.ShuffleResult',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='cardlist', full_name='majong_rpc.ShuffleResult.cardlist', index=0,
            number=1, type=5, cpp_type=1, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=944,
    serialized_end=977,
)

_GANGDATA.fields_by_name['type'].enum_type = _GANGTYPE
_MAJONGPLAYERDATA.fields_by_name['gang'].message_type = _GANGDATA
_CALCULATEDATA.fields_by_name['player'].message_type = _MAJONGPLAYERDATA
_SETTLEPLAYERDATA.fields_by_name['player'].message_type = _MAJONGPLAYERDATA
_SETTLEPLAYERDATA.fields_by_name['settle'].enum_type = _SETTLETYPE
_SETTLEDATA.fields_by_name['player_list'].message_type = _SETTLEPLAYERDATA
_SETTLERESULT.fields_by_name['userSettleResule'].message_type = _USERSETTLERESULT
_USERSETTLERESULT.fields_by_name['settlePatterns'].enum_type = _SETTLEPATTERNS
_SHUFFLEDATA.fields_by_name['cheats'].message_type = _CHEATDATA
DESCRIPTOR.message_types_by_name['GangData'] = _GANGDATA
DESCRIPTOR.message_types_by_name['MajongPlayerData'] = _MAJONGPLAYERDATA
DESCRIPTOR.message_types_by_name['CalculateData'] = _CALCULATEDATA
DESCRIPTOR.message_types_by_name['CalculateResult'] = _CALCULATERESULT
DESCRIPTOR.message_types_by_name['SettlePlayerData'] = _SETTLEPLAYERDATA
DESCRIPTOR.message_types_by_name['SettleData'] = _SETTLEDATA
DESCRIPTOR.message_types_by_name['SettleResult'] = _SETTLERESULT
DESCRIPTOR.message_types_by_name['UserSettleResult'] = _USERSETTLERESULT
DESCRIPTOR.message_types_by_name['CheatData'] = _CHEATDATA
DESCRIPTOR.message_types_by_name['ShuffleData'] = _SHUFFLEDATA
DESCRIPTOR.message_types_by_name['ShuffleResult'] = _SHUFFLERESULT
DESCRIPTOR.enum_types_by_name['GangType'] = _GANGTYPE
DESCRIPTOR.enum_types_by_name['SettleType'] = _SETTLETYPE
DESCRIPTOR.enum_types_by_name['SettlePatterns'] = _SETTLEPATTERNS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GangData = _reflection.GeneratedProtocolMessageType('GangData', (_message.Message,), dict(
    DESCRIPTOR=_GANGDATA,
    __module__='mahjong_pb2'
    # @@protoc_insertion_point(class_scope:majong_rpc.GangData)
))
_sym_db.RegisterMessage(GangData)

MajongPlayerData = _reflection.GeneratedProtocolMessageType('MajongPlayerData', (_message.Message,), dict(
    DESCRIPTOR=_MAJONGPLAYERDATA,
    __module__='mahjong_pb2'
    # @@protoc_insertion_point(class_scope:majong_rpc.MajongPlayerData)
))
_sym_db.RegisterMessage(MajongPlayerData)

CalculateData = _reflection.GeneratedProtocolMessageType('CalculateData', (_message.Message,), dict(
    DESCRIPTOR=_CALCULATEDATA,
    __module__='mahjong_pb2'
    # @@protoc_insertion_point(class_scope:majong_rpc.CalculateData)
))
_sym_db.RegisterMessage(CalculateData)

CalculateResult = _reflection.GeneratedProtocolMessageType('CalculateResult', (_message.Message,), dict(
    DESCRIPTOR=_CALCULATERESULT,
    __module__='mahjong_pb2'
    # @@protoc_insertion_point(class_scope:majong_rpc.CalculateResult)
))
_sym_db.RegisterMessage(CalculateResult)

SettlePlayerData = _reflection.GeneratedProtocolMessageType('SettlePlayerData', (_message.Message,), dict(
    DESCRIPTOR=_SETTLEPLAYERDATA,
    __module__='mahjong_pb2'
    # @@protoc_insertion_point(class_scope:majong_rpc.SettlePlayerData)
))
_sym_db.RegisterMessage(SettlePlayerData)

SettleData = _reflection.GeneratedProtocolMessageType('SettleData', (_message.Message,), dict(
    DESCRIPTOR=_SETTLEDATA,
    __module__='mahjong_pb2'
    # @@protoc_insertion_point(class_scope:majong_rpc.SettleData)
))
_sym_db.RegisterMessage(SettleData)

SettleResult = _reflection.GeneratedProtocolMessageType('SettleResult', (_message.Message,), dict(
    DESCRIPTOR=_SETTLERESULT,
    __module__='mahjong_pb2'
    # @@protoc_insertion_point(class_scope:majong_rpc.SettleResult)
))
_sym_db.RegisterMessage(SettleResult)

UserSettleResult = _reflection.GeneratedProtocolMessageType('UserSettleResult', (_message.Message,), dict(
    DESCRIPTOR=_USERSETTLERESULT,
    __module__='mahjong_pb2'
    # @@protoc_insertion_point(class_scope:majong_rpc.UserSettleResult)
))
_sym_db.RegisterMessage(UserSettleResult)

CheatData = _reflection.GeneratedProtocolMessageType('CheatData', (_message.Message,), dict(
    DESCRIPTOR=_CHEATDATA,
    __module__='mahjong_pb2'
    # @@protoc_insertion_point(class_scope:majong_rpc.CheatData)
))
_sym_db.RegisterMessage(CheatData)

ShuffleData = _reflection.GeneratedProtocolMessageType('ShuffleData', (_message.Message,), dict(
    DESCRIPTOR=_SHUFFLEDATA,
    __module__='mahjong_pb2'
    # @@protoc_insertion_point(class_scope:majong_rpc.ShuffleData)
))
_sym_db.RegisterMessage(ShuffleData)

ShuffleResult = _reflection.GeneratedProtocolMessageType('ShuffleResult', (_message.Message,), dict(
    DESCRIPTOR=_SHUFFLERESULT,
    __module__='mahjong_pb2'
    # @@protoc_insertion_point(class_scope:majong_rpc.ShuffleResult)
))
_sym_db.RegisterMessage(ShuffleResult)

DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\022mahjong.mode.protoP\001'))

_MAJONGCALCULATE = _descriptor.ServiceDescriptor(
    name='MajongCalculate',
    full_name='majong_rpc.MajongCalculate',
    file=DESCRIPTOR,
    index=0,
    options=None,
    serialized_start=1291,
    serialized_end=1506,
    methods=[
        _descriptor.MethodDescriptor(
            name='calculate',
            full_name='majong_rpc.MajongCalculate.calculate',
            index=0,
            containing_service=None,
            input_type=_CALCULATEDATA,
            output_type=_CALCULATERESULT,
            options=None,
        ),
        _descriptor.MethodDescriptor(
            name='settle',
            full_name='majong_rpc.MajongCalculate.settle',
            index=1,
            containing_service=None,
            input_type=_SETTLEDATA,
            output_type=_SETTLERESULT,
            options=None,
        ),
        _descriptor.MethodDescriptor(
            name='shuffle',
            full_name='majong_rpc.MajongCalculate.shuffle',
            index=2,
            containing_service=None,
            input_type=_SHUFFLEDATA,
            output_type=_SHUFFLERESULT,
            options=None,
        ),
    ])
_sym_db.RegisterServiceDescriptor(_MAJONGCALCULATE)

DESCRIPTOR.services_by_name['MajongCalculate'] = _MAJONGCALCULATE

try:
    # THESE ELEMENTS WILL BE DEPRECATED.
    # Please use the generated *_pb2_grpc.py files instead.
    import grpc
    from grpc.beta import implementations as beta_implementations
    from grpc.beta import interfaces as beta_interfaces
    from grpc.framework.common import cardinality
    from grpc.framework.interfaces.face import utilities as face_utilities


    class MajongCalculateStub(object):
        # missing associated documentation comment in .proto file
        pass

        def __init__(self, channel):
            """Constructor.

            Args:
              channel: A grpc.Channel.
            """
            self.calculate = channel.unary_unary(
                '/majong_rpc.MajongCalculate/calculate',
                request_serializer=CalculateData.SerializeToString,
                response_deserializer=CalculateResult.FromString,
            )
            self.settle = channel.unary_unary(
                '/majong_rpc.MajongCalculate/settle',
                request_serializer=SettleData.SerializeToString,
                response_deserializer=SettleResult.FromString,
            )
            self.shuffle = channel.unary_unary(
                '/majong_rpc.MajongCalculate/shuffle',
                request_serializer=ShuffleData.SerializeToString,
                response_deserializer=ShuffleResult.FromString,
            )


    class MajongCalculateServicer(object):
        # missing associated documentation comment in .proto file
        pass

        def calculate(self, request, context):
            """进行麻将牌过程计算
            """
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')

        def settle(self, request, context):
            """结算
            """
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')

        def shuffle(self, request, context):
            """洗牌函数
            """
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')


    def add_MajongCalculateServicer_to_server(servicer, server):
        rpc_method_handlers = {
            'calculate': grpc.unary_unary_rpc_method_handler(
                servicer.calculate,
                request_deserializer=CalculateData.FromString,
                response_serializer=CalculateResult.SerializeToString,
            ),
            'settle': grpc.unary_unary_rpc_method_handler(
                servicer.settle,
                request_deserializer=SettleData.FromString,
                response_serializer=SettleResult.SerializeToString,
            ),
            'shuffle': grpc.unary_unary_rpc_method_handler(
                servicer.shuffle,
                request_deserializer=ShuffleData.FromString,
                response_serializer=ShuffleResult.SerializeToString,
            ),
        }
        generic_handler = grpc.method_handlers_generic_handler(
            'majong_rpc.MajongCalculate', rpc_method_handlers)
        server.add_generic_rpc_handlers((generic_handler,))


    class BetaMajongCalculateServicer(object):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This class was generated
        only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
        # missing associated documentation comment in .proto file
        pass

        def calculate(self, request, context):
            """进行麻将牌过程计算
            """
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

        def settle(self, request, context):
            """结算
            """
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

        def shuffle(self, request, context):
            """洗牌函数
            """
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


    class BetaMajongCalculateStub(object):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This class was generated
        only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
        # missing associated documentation comment in .proto file
        pass

        def calculate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
            """进行麻将牌过程计算
            """
            raise NotImplementedError()

        calculate.future = None

        def settle(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
            """结算
            """
            raise NotImplementedError()

        settle.future = None

        def shuffle(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
            """洗牌函数
            """
            raise NotImplementedError()

        shuffle.future = None


    def beta_create_MajongCalculate_server(servicer, pool=None, pool_size=None, default_timeout=None,
                                           maximum_timeout=None):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This function was
        generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
        request_deserializers = {
            ('majong_rpc.MajongCalculate', 'calculate'): CalculateData.FromString,
            ('majong_rpc.MajongCalculate', 'settle'): SettleData.FromString,
            ('majong_rpc.MajongCalculate', 'shuffle'): ShuffleData.FromString,
        }
        response_serializers = {
            ('majong_rpc.MajongCalculate', 'calculate'): CalculateResult.SerializeToString,
            ('majong_rpc.MajongCalculate', 'settle'): SettleResult.SerializeToString,
            ('majong_rpc.MajongCalculate', 'shuffle'): ShuffleResult.SerializeToString,
        }
        method_implementations = {
            ('majong_rpc.MajongCalculate', 'calculate'): face_utilities.unary_unary_inline(servicer.calculate),
            ('majong_rpc.MajongCalculate', 'settle'): face_utilities.unary_unary_inline(servicer.settle),
            ('majong_rpc.MajongCalculate', 'shuffle'): face_utilities.unary_unary_inline(servicer.shuffle),
        }
        server_options = beta_implementations.server_options(request_deserializers=request_deserializers,
                                                             response_serializers=response_serializers,
                                                             thread_pool=pool, thread_pool_size=pool_size,
                                                             default_timeout=default_timeout,
                                                             maximum_timeout=maximum_timeout)
        return beta_implementations.server(method_implementations, options=server_options)


    def beta_create_MajongCalculate_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This function was
        generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
        request_serializers = {
            ('majong_rpc.MajongCalculate', 'calculate'): CalculateData.SerializeToString,
            ('majong_rpc.MajongCalculate', 'settle'): SettleData.SerializeToString,
            ('majong_rpc.MajongCalculate', 'shuffle'): ShuffleData.SerializeToString,
        }
        response_deserializers = {
            ('majong_rpc.MajongCalculate', 'calculate'): CalculateResult.FromString,
            ('majong_rpc.MajongCalculate', 'settle'): SettleResult.FromString,
            ('majong_rpc.MajongCalculate', 'shuffle'): ShuffleResult.FromString,
        }
        cardinalities = {
            'calculate': cardinality.Cardinality.UNARY_UNARY,
            'settle': cardinality.Cardinality.UNARY_UNARY,
            'shuffle': cardinality.Cardinality.UNARY_UNARY,
        }
        stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer,
                                                         request_serializers=request_serializers,
                                                         response_deserializers=response_deserializers,
                                                         thread_pool=pool, thread_pool_size=pool_size)
        return beta_implementations.dynamic_stub(channel, 'majong_rpc.MajongCalculate', cardinalities,
                                                 options=stub_options)
except ImportError:
    pass
# @@protoc_insertion_point(module_scope)
