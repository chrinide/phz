# coding=utf-8
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import zipai_pb2 as zipai__pb2


class ZipaiStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.calculate = channel.unary_unary(
            '/Zipai/calculate',
            request_serializer=zipai__pb2.CalculateData.SerializeToString,
            response_deserializer=zipai__pb2.CalculateResult.FromString,
        )
        self.settle = channel.unary_unary(
            '/Zipai/settle',
            request_serializer=zipai__pb2.SettleData.SerializeToString,
            response_deserializer=zipai__pb2.SettleResult.FromString,
        )
        self.shuffle = channel.unary_unary(
            '/Zipai/shuffle',
            request_serializer=zipai__pb2.ShuffleData.SerializeToString,
            response_deserializer=zipai__pb2.ShuffleResult.FromString,
        )


class ZipaiServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def calculate(self, request, context):
        """进行过程计算
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def settle(self, request, context):
        """结算
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def shuffle(self, request, context):
        """洗牌函数
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ZipaiServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'calculate': grpc.unary_unary_rpc_method_handler(
            servicer.calculate,
            request_deserializer=zipai__pb2.CalculateData.FromString,
            response_serializer=zipai__pb2.CalculateResult.SerializeToString,
        ),
        'settle': grpc.unary_unary_rpc_method_handler(
            servicer.settle,
            request_deserializer=zipai__pb2.SettleData.FromString,
            response_serializer=zipai__pb2.SettleResult.SerializeToString,
        ),
        'shuffle': grpc.unary_unary_rpc_method_handler(
            servicer.shuffle,
            request_deserializer=zipai__pb2.ShuffleData.FromString,
            response_serializer=zipai__pb2.ShuffleResult.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'Zipai', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
